// This file is part of midnightntwrk/example-counter.
// Copyright (C) 2025 Midnight Foundation
// SPDX-License-Identifier: Apache-2.0
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

pragma language_version >= 0.16 && <= 0.17;

import CompactStandardLibrary;

// public state
export ledger verifier: Counter;

// witness to get the private secret
witness getSecret(): Field;

// A simple circuit to prove knowledge of a secret that hashes to a public id.
export circuit verify(id: Bytes<32>): [] {
  const secret = getSecret();
  assert(persistentHash<Field>(secret) == id, "Invalid secret");
  verifier.increment(1);
}